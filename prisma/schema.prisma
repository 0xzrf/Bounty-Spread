// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Host {
  id        Int        @id @default(autoincrement())
  email     String     @unique
  username  String     @unique
  publicKey String     @unique
  bounties  Bounties[]

  @@unique([publicKey, email])
}

model Bounties {
  id          Int                 @id @default(autoincrement())
  name        String              @unique
  type        String
  sumbissions BountySubmissions[]
  description String
  createdAt   DateTime            @default(now())
  isActive    Boolean             @default(true)
  interval    DateTime
  hostId      Int
  hostRel     Host                @relation(fields: [hostId], references: [id])
  questions   String[]
  types       String[]
}

model BountySubmissions {
  id          Int          @id @default(autoincrement())
  userid      Int
  userRel     User         @relation(fields: [userid], references: [id])
  bountyId    Int
  bountyInput BountyInput?
  bountyRel   Bounties     @relation(fields: [bountyId], references: [id])
}

model BountyInput {
  id            Int               @id @default(autoincrement())
  otherInfo     String
  amount        Int
  question      String[]
  answers       String[]
  submissionId  Int               @unique
  submissionRel BountySubmissions @relation(fields: [submissionId], references: [id])
}

model User {
  id               Int                 @id @default(autoincrement())
  email            String              @unique
  username         String              @unique
  publicKey        String              @unique
  bountySubmission BountySubmissions[]

  @@unique([publicKey, email])
}
