// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}


datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Host {
  id         Int        @id @default(autoincrement())
  email      String     @unique
  username   String     @unique
  publicKey  String     @unique
  isPaid     Boolean    @default(false)
  freeTrials Int        @default(5)
  apiKey     String?     @unique
  bounties   Bounties[]
  @@unique([publicKey, email])
}

model Bounties {
  id          String              @id @default(uuid())
  name        String              
  amount      Int
  imageUrl    String
  isVerified  Boolean             @default(true)
  type        String
  sumbissions BountySubmissions[]
  description String
  createdAt   DateTime            @default(now())
  isActive    Boolean             @default(true)
  interval    DateTime
  hostId      Int
  hostRel     Host                @relation(fields: [hostId], references: [id])
  questions   String[]
  types       String[]
  winners     String[]            @default([])
  prizes      Float[]             @default([])
  usernames       String[]            @default([])
  claimed     String[]
  escrow_id   Int?
  submitText  String?           @default("Submit & win 1000 USD")
}

model BountySubmissions {
  id           Int      @id @default(autoincrement())
  bountyId     String
  candidPubKey String
  question     String[]
  answers      String[]
  bountyRel    Bounties @relation(fields: [bountyId], references: [id])
  username     String @default("")
  @@unique([bountyId, candidPubKey])
}
